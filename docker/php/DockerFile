# Etapa 1: Build de dependencias y assets
FROM php:8.2-fpm AS builder

# Instalar dependencias del sistema necesarias para PHP y extensiones
RUN apt-get update && apt-get install -y \
    git unzip libzip-dev libpng-dev libonig-dev libxml2-dev \
    && docker-php-ext-install pdo pdo_mysql mbstring zip exif pcntl bcmath gd \
    && rm -rf /var/lib/apt/lists/*

# Instalar Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

WORKDIR /var/www/html

# Copiar composer.* y instalar dependencias PHP sin dev
COPY composer.json composer.lock ./
RUN composer install --no-dev --optimize-autoloader --no-interaction

# Copiar resto del código de la aplicación
COPY . .

# Construir assets con Node (si usas Vite)
FROM node:20 AS frontend
WORKDIR /app
COPY package.json package-lock.json ./
RUN npm ci
COPY . .
RUN npm run build

# Copiar build de frontend a la app PHP
FROM builder AS combined
COPY --from=frontend /app/public/build ./public/build
COPY --from=frontend /app/public/manifest.json ./public/manifest.json

# Optimizaciones de Laravel
RUN php artisan config:cache \
 && php artisan route:cache \
 && php artisan view:cache


# Etapa 2: Imagen final de producción
FROM php:8.2-fpm AS production

# Extensiones necesarias (mismas que en build)
RUN apt-get update && apt-get install -y \
    libzip-dev libpng-dev libonig-dev libxml2-dev \
    && docker-php-ext-install pdo pdo_mysql mbstring zip exif pcntl bcmath gd \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /var/www/html

# Copiar solo lo necesario desde la etapa de build
COPY --from=combined /var/www/html /var/www/html

# Ajustar permisos para Laravel
RUN chown -R www-data:www-data storage bootstrap/cache \
 && chmod -R 775 storage bootstrap/cache

EXPOSE 9000
CMD ["php-fpm"]

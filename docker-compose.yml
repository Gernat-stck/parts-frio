services:
  postgres:
    image: postgres:15
    container_name: nexus-postgres
    restart: unless-stopped
    env_file:
      - .env.db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', "psql -U ${POSTGRES_USER:-dev08_db} -d postgres -c 'SELECT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nexus-net

  svfe-api-firmador:
    image: svfe/svfe-api-firmador:v20230109
    container_name: svfe-api-firmador
    ports:
      - '8113:8113'
    volumes:
     - ${PWD}/docker/firmador/temp:/uploads:ro
    networks:
      - nexus-net

  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: nexus-app
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - .env
    volumes:
      - storage:/var/www/html/storage
      - public-data:/var/www/html/public
      - storage-data:/var/www/html/storage
    healthcheck:
      test: ['CMD-SHELL', 'php artisan route:list >/dev/null 2>&1']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      svfe-api-firmador:
        condition: service_started
    networks:
      - nexus-net

  nginx:
    image: nginx:alpine
    container_name: nexus-testing-nginx
    restart: on-failure:3
    ports:
      - '80:80'
      - '443:443'
    volumes:
      # Use this for initial certificate acquisition.
      # - ./docker/nginx/certonly.conf:/etc/nginx/conf.d/default.conf:ro

      # Use this for production after certificates are acquired.
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/dev.conf:ro
      - certbot-etc:/etc/letsencrypt
      - public-data:/var/www/html/public
      - certbot-web:/var/www/certbot
    depends_on:
      app:
        condition: service_healthy
    networks:
      - nexus-net

volumes:
  pgdata:
  firmador_temp:
  storage:
  certbot-etc:
  certbot-var:
  certbot-web:
  public-data:
  storage-data:

networks:
  nexus-net: